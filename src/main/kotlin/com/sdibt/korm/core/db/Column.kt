/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package com.sdibt.korm.core.db

data class Column(
        /**
         * (Optional) The name of the column. Defaults to
         * the property or field name.
         */
        var name: String,

        /**
         * (Optional) Whether the property is a unique key.  This is a
         * shortcut for the UniqueConstraint annotation at the table
         * level and is useful for when the unique key constraint is
         * only a single field. This constraint applies in addition
         * to any constraint entailed by primary key mapping and
         * to constraints specified at the table level.
         */
        var unique: Boolean = false,

        /**
         * (Optional) Whether the database column is nullable.
         */
        var nullable: Boolean = true,

        /**
         * (Optional) Whether the column is included in SQL INSERT
         * statements generated by the persistence provider.
         */
        var insertable: Boolean = true,

        /**
         * (Optional) Whether the column is included in SQL UPDATE
         * statements generated by the persistence provider.
         */
        var updatable: Boolean = true,

        /**
         * (Optional) The SQL fragment that is used when
         * generating the DDL for the column.
         *
         *  Defaults to the generated SQL to create a
         * column of the inferred type.
         */
        var columnDefinition: String = "",

        /**
         * (Optional) The name of the table that contains the column.
         * If absent the column is assumed to be in the primary table.
         */
        var table: String = "",

        /**
         * (Optional) The column length. (Applies only if a
         * string-valued column is used.)
         */
        var length: Int = 255,

        /**
         * (Optional) The precision for a decimal (exact numeric)
         * column. (Applies only if a decimal column is used.)
         * Value must be set by developer if used when generating
         * the DDL for the column.
         */
        var precision: Int = 10,

        /**
         * (Optional) The scale for a decimal (exact numeric) column.
         * (Applies only if a decimal column is used.)
         */
        var scale: Int = 0,
        /**
         * (Optional) The Column comment
         */
        var comment: String? = null,
        /**
         * (Optional) Whether the column is pk.
         */
        var isPk: Boolean = false,
        /**
         * The Column Type
         */
        var type: Class<*>,
        /**
         * The Column defaultValue
         */
        var defaultValue: String? = null
)
